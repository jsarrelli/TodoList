play.modules.enabled += "api.TodolistModule"
play.filters.disabled+=play.filters.csrf.CSRFFilter
#play.modules.disabled+=play.api.cache.EhCacheModule
#play.server.pidfile.path=/dev/null

Todolist-Domain {

    akka {
      loglevel = "DEBUG"
      actor {
        provider = cluster
        warn-about-java-serializer-usage = off
        allow-java-serialization = off

        serializers {
            kryo = "com.twitter.chill.akka.AkkaSerializer"
        }
        serialization-bindings {
            "java.io.Serializable" = kryo
            "java.lang.Throwable" = kryo
        }

      }

      coordinated-shutdown.exit-jvm = off

      cluster {
        shutdown-after-unsuccessful-join-seed-nodes = 60s

        downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
        split-brain-resolver {
          active-strategy = keep-majority
          stable-after = 10s
          down-all-when-unstable = on
        }
      }

      persistence {
        max-concurrent-recoveries = 300
        journal-plugin-fallback.recovery-event-timeout = 60s

        journal {
            plugin = "akka-contrib-mongodb-persistence-journal"
            auto-start-journals = ["akka-contrib-mongodb-persistence-journal"]
        }
        snapshot-store{
            plugin = "akka-contrib-mongodb-persistence-snapshot"
            auto-start-snapshot-stores = ["akka-contrib-mongodb-persistence-snapshot"]
            }
          }

         contrib.persistence.mongodb {
            mongo {
                mongouri = "mongodb://localhost:27017/todolist"
                journal-write-concern = "Acknowledged"
                journal-wtimeout = 10s
                journal-fsync = false
                snaps-wtimeout = 10s
                snaps-fsync = false
                suffix-builder.separator = "_"
                suffix-builder.class = "persistence.SuffixCollectionNames"
                journal-collection = "journal"
                snaps-collection = "snapshots"
                realtime-enable-persistence = false
            }
          }
    }

    #management-config
    akka.management {
      cluster.bootstrap {
        contact-point-discovery {
          # pick the discovery method you'd like to use:
          discovery-method = kubernetes-api

          required-contact-point-nr = 1
        }
      }
    }

}